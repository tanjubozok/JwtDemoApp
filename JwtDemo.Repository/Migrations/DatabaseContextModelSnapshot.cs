// <auto-generated />
using System;
using JwtDemo.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JwtDemo.Repository.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JwtDemo.Entities.Concrete.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Member"
                        });
                });

            modelBuilder.Entity("JwtDemo.Entities.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Admin",
                            Password = "123456",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Member",
                            Password = "123456",
                            Username = "member"
                        });
                });

            modelBuilder.Entity("JwtDemo.Entities.Concrete.AppUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppRoleId")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("AppUserId", "AppRoleId")
                        .IsUnique();

                    b.ToTable("AppUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppRoleId = 1,
                            AppUserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppRoleId = 2,
                            AppUserId = 2
                        });
                });

            modelBuilder.Entity("JwtDemo.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 5, 19, 11, 9, 1, 274, DateTimeKind.Local).AddTicks(9714),
                            Description = "Por kiel auxdis sed agis la sklavo la direktis alteren mi la homoj min karolo grava tre por lia kaj",
                            IsActive = true,
                            Name = "Product 1",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 5, 19, 11, 9, 1, 274, DateTimeKind.Local).AddTicks(9728),
                            Description = "Ne mi surtere havu barelojn facile greno kaj kaj mi li bonan de objektojn ni alportis se havas iradis renkonti",
                            IsActive = true,
                            Name = "Product 2",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 5, 19, 11, 9, 1, 274, DateTimeKind.Local).AddTicks(9728),
                            Description = "Por en la ni knabo lauxteron signojn kun lasis sur surboaton malproksime boaton iri ensxipis kvin li estis gastoj ne",
                            IsActive = true,
                            Name = "Product 3",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 5, 19, 11, 9, 1, 274, DateTimeKind.Local).AddTicks(9729),
                            Description = "Longe nia fisxojn estas sencon boaton vi tio ne kie forkuri helpo boaton jarojn faris mi per la iom por",
                            IsActive = true,
                            Name = "Product 4",
                            Status = true
                        });
                });

            modelBuilder.Entity("JwtDemo.Entities.Concrete.AppUserRole", b =>
                {
                    b.HasOne("JwtDemo.Entities.Concrete.AppRole", "AppRole")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JwtDemo.Entities.Concrete.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("JwtDemo.Entities.Concrete.AppRole", b =>
                {
                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("JwtDemo.Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
